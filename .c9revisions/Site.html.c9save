{"ts":1353339609028,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1353339653158,"patch":[[{"diffs":[[1,"\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n    \t<meta charset=\"utf-8\">\r\n\t\t<meta name=\"viewport\" content=\"width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\">\r\n\t\t<title>Fanny Gillet</title>\r\n\t\t<style>\r\n\t\t\thtml, body {\r\n\t\t\t\theight: 100%;\r\n\t\t\t}\r\n\r\n\t\t\tbody {\r\n\t\t\t\tbackground-color: #000000;\r\n\t\t\t\tmargin: 0;\r\n\t\t\t\tfont-family: Arial;\r\n\t\t\t\toverflow: hidden;\r\n\t\t\t}\r\n\r\n\t\t\ta {\r\n\t\t\t\tcolor: #ffffff;\r\n\t\t\t}\r\n\r\n\t\t\t#menu {\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\ttop: 20px;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\ttext-align: center;\r\n\t\t\t}\r\n\r\n\t\t\tbutton {\r\n\t\t\t\tcolor: rgba(127,255,255,0.75);\r\n\t\t\t\tbackground: transparent;\r\n\t\t\t\toutline: 1px solid rgba(127,255,255,0.75);\r\n\t\t\t\tborder: 0px;\r\n\t\t\t\tpadding: 5px 10px;\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t}\r\n\t\t\tbutton:hover {\r\n\t\t\t\tbackground-color: rgba(0,255,255,0.5);\r\n\t\t\t}\r\n\t\t\tbutton:active {\r\n\t\t\t\tcolor: #000000;\r\n\t\t\t\tbackground-color: rgba(0,255,255,0.75);\r\n\t\t\t}\r\n\t\t</style>\r\n\t</head>\r\n\t<body>\r\n\t\t<script src=\"three.min.js\"></script>\r\n\r\n\t\t<div id=\"container\"></div>\r\n\t\t<div id=\"menu\">\r\n\t\t\t<button id=\"menu1\">FANNY</button>\r\n\t\t\t<button id=\"menu2\">GILLET</button>\r\n\t\t\t<button id=\"menu3\">FANNY GILLET</button>\r\n\t\t\t<button id=\"menu4\">GILLET FANNY</button>\r\n\r\n\t\t<script>\r\n\r\n\t\t\tvar camera, scene, renderer;\r\n            var angularSpeed = 0.1; // revolutions per second\r\n            var lastTime = 0;\r\n\r\n            window.onload = function(){\r\n    \t\t\tinit();\r\n    \t\t\tanimate();\r\n            }\r\n\r\n\t\t\tfunction init() {\r\n\r\n\t\t\t\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 5000 );\r\n\t\t\t\tcamera.position.z = 1800;\r\n\r\n\t\t\t\tscene = new THREE.Scene();\r\n\r\n                // HELIX\t\t\t\r\n    \t\t\t//var vector = new THREE.Vector3();\r\n                var geometry1 = new THREE.Geometry();\r\n                var geometry2 = new THREE.Geometry();\r\n                var size = 50;\r\n                var rotUnit = 200;\r\n                var top = 1000;\r\n                var heightUnit = 90;\r\n                var angleUnit = 0.3;\r\n\r\n\t\t\t\tfor ( var i = 0; i < 24; i ++ ) {\r\n\r\n\t\t\t\t\tvar phi = i * angleUnit + Math.PI/2;\r\n\r\n\t\t\t\t\tvar ball1 = new THREE.Mesh(new THREE.SphereGeometry(size, size, size, 30), new THREE.MeshPhongMaterial( { color: 0xFFFFFF } ));\r\n\t\t\t\t\tball1.position.x = rotUnit * Math.sin( phi );\r\n\t\t\t\t\tball1.position.y = - ( i * heightUnit ) + top;\r\n\t\t\t\t\tball1.position.z = rotUnit * Math.cos( phi );\r\n                    scene.add(ball1);\r\n                    geometry1.vertices.push( ball1.position );\r\n                    \r\n                    var ball2 = new THREE.Mesh(new THREE.SphereGeometry(size, size, size, 30), new THREE.MeshPhongMaterial({ color: 0x0FFFFF }));\r\n    \t\t\t\tball2.position.x = rotUnit * Math.sin( phi - Math.PI);\r\n\t\t\t\t\tball2.position.y = - ( i * heightUnit ) + top;\r\n\t\t\t\t\tball2.position.z = rotUnit * Math.cos( phi - Math.PI);\r\n                    scene.add(ball2);\r\n                    geometry2.vertices.push( ball2.position );\r\n                    \r\n                    var geometry = new THREE.Geometry();\r\n                    geometry.vertices.push( ball1.position );\r\n                    geometry.vertices.push( ball2.position );\r\n                    var line = new THREE.Line( geometry, new THREE.LineBasicMaterial( { color: 0xffffff, opacity: 1 } ) );\r\n        \t\t    scene.add( line );\r\n\r\n                }\r\n                \r\n                var line1 = new THREE.Line( geometry1, new THREE.LineBasicMaterial( { color: 0xffffff, opacity: 1 } ) );\r\n    \t\t\tscene.add( line1 );\r\n                var line2 = new THREE.Line( geometry2, new THREE.LineBasicMaterial( { color: 0xffffff, opacity: 1 } ) );\r\n        \t\tscene.add( line2 );\r\n\t\t\t\t//\r\n                \r\n                // LIGHT\r\n                var light = new THREE.PointLight(0xffffff);\r\n            \tlight.position.set(500,150,1500);\r\n            \tscene.add(light);\r\n                var light = new THREE.PointLight(0xffffff);\r\n                light.position.set(-500,150,-1500);\r\n            \tscene.add(light);\r\n\r\n\t\t\t\trenderer = new THREE.WebGLRenderer({ antialias: true });\r\n\t\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\r\n\t\t\t\trenderer.domElement.style.position = 'absolute';\r\n\t\t\t\tdocument.getElementById( 'container' ).appendChild( renderer.domElement );\r\n\r\n\t\t\t\twindow.addEventListener( 'resize', onWindowResize, false );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction onWindowResize() {\r\n\r\n\t\t\t\tcamera.aspect = window.innerWidth / window.innerHeight;\r\n\t\t\t\tcamera.updateProjectionMatrix();\r\n\r\n\t\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\r\n\r\n\t\t\t}\r\n            var angle=0;\r\n            function animate(){//lastTime, angularSpeed, three){\r\n                // update\r\n                var date = new Date();\r\n                var time = date.getTime();\r\n                \r\n                angle = (angle + 0.001) % (2*Math.PI);\r\n                camera.position.x = 1800 * Math.sin( angle );\r\n\t\t\t\t//camera.position.y = - ( i * heightUnit ) + top;\r\n\t\t\t\tcamera.position.z = 1800 * Math.cos( angle );\r\n                camera.lookAt(scene.children[30].position);\r\n                //var timeDiff = time - lastTime;\r\n                //var angleChange = angularSpeed * timeDiff * 2 * Math.PI / 1000;\r\n                \r\n               // three.cylinder.rotation.x += angleChange;\r\n                //lastTime = time;\r\n         \r\n                // render\r\n                renderer.render(scene, camera);\r\n         \r\n                // request new frame\r\n               /* requestAnimationFrame( function(){\r\n                    animate(lastTime, angularSpeed, three);\r\n                });*/\r\n                /*requestAnimFrame(function(){\r\n                    animate(lastTime, angularSpeed, three);\r\n                });*/\r\n                requestAnimationFrame(animate);\r\n            }\r\n\r\n\t\t</script>\r\n\t</body>\r\n</html>\r\n"]],"start1":0,"start2":0,"length1":0,"length2":5738}]],"length":5738,"saved":false}
{"ts":1353339662947,"patch":[[{"diffs":[[0,"pt src=\""],[1,"site/"],[0,"three.mi"]],"start1":917,"start2":917,"length1":16,"length2":21}]],"length":5743,"saved":false}
{"ts":1353339700543,"patch":[[{"diffs":[[0,"rc=\""],[-1,"site/"],[0,"thre"]],"start1":921,"start2":921,"length1":13,"length2":8}]],"length":5738,"saved":false}
{"ts":1353339720216,"patch":[[{"diffs":[[0,"pt src=\""],[1,"site\\"],[0,"three.mi"]],"start1":917,"start2":917,"length1":16,"length2":21}]],"length":5743,"saved":false}
{"ts":1353339765789,"patch":[[{"diffs":[[0,"site"],[-1,"\\"],[1,"/"],[0,"thre"]],"start1":925,"start2":925,"length1":9,"length2":9}]],"length":5743,"saved":false}
{"ts":1353339840999,"patch":[[{"diffs":[[0,"rc=\""],[-1,"site/"],[0,"thre"]],"start1":921,"start2":921,"length1":13,"length2":8}]],"length":5738,"saved":false}
{"ts":1353339908016,"patch":[[{"diffs":[[0,"pt src=\""],[1,"site/"],[0,"three.mi"]],"start1":917,"start2":917,"length1":16,"length2":21}]],"length":5743,"saved":false}
{"contributors":[],"silentsave":false,"ts":1353340090816,"patch":[[{"diffs":[[1,"\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n    \t<meta charset=\"utf-8\">\r\n\t\t<meta name=\"viewport\" content=\"width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\">\r\n\t\t<title>Fanny Gillet</title>\r\n\t\t<style>\r\n\t\t\thtml, body {\r\n\t\t\t\theight: 100%;\r\n\t\t\t}\r\n\r\n\t\t\tbody {\r\n\t\t\t\tbackground-color: #000000;\r\n\t\t\t\tmargin: 0;\r\n\t\t\t\tfont-family: Arial;\r\n\t\t\t\toverflow: hidden;\r\n\t\t\t}\r\n\r\n\t\t\ta {\r\n\t\t\t\tcolor: #ffffff;\r\n\t\t\t}\r\n\r\n\t\t\t#menu {\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\ttop: 20px;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\ttext-align: center;\r\n\t\t\t}\r\n\r\n\t\t\tbutton {\r\n\t\t\t\tcolor: rgba(127,255,255,0.75);\r\n\t\t\t\tbackground: transparent;\r\n\t\t\t\toutline: 1px solid rgba(127,255,255,0.75);\r\n\t\t\t\tborder: 0px;\r\n\t\t\t\tpadding: 5px 10px;\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t}\r\n\t\t\tbutton:hover {\r\n\t\t\t\tbackground-color: rgba(0,255,255,0.5);\r\n\t\t\t}\r\n\t\t\tbutton:active {\r\n\t\t\t\tcolor: #000000;\r\n\t\t\t\tbackground-color: rgba(0,255,255,0.75);\r\n\t\t\t}\r\n\t\t</style>\r\n\t</head>\r\n\t<body>\r\n\t\t<script src=\"three.min.js\"></script>\r\n\r\n\t\t<div id=\"container\"></div>\r\n\t\t<div id=\"menu\">\r\n\t\t\t<button id=\"menu1\">FANNY</button>\r\n\t\t\t<button id=\"menu2\">GILLET</button>\r\n\t\t\t<button id=\"menu3\">FANNY GILLET</button>\r\n\t\t\t<button id=\"menu4\">GILLET FANNY</button>\r\n\r\n\t\t<script>\r\n\r\n\t\t\tvar camera, scene, renderer;\r\n            var angularSpeed = 0.1; // revolutions per second\r\n            var lastTime = 0;\r\n\r\n            window.onload = function(){\r\n    \t\t\tinit();\r\n    \t\t\tanimate();\r\n            }\r\n\r\n\t\t\tfunction init() {\r\n\r\n\t\t\t\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 5000 );\r\n\t\t\t\tcamera.position.z = 1800;\r\n\r\n\t\t\t\tscene = new THREE.Scene();\r\n\r\n                // HELIX\t\t\t\r\n    \t\t\t//var vector = new THREE.Vector3();\r\n                var geometry1 = new THREE.Geometry();\r\n                var geometry2 = new THREE.Geometry();\r\n                var size = 50;\r\n                var rotUnit = 200;\r\n                var top = 1000;\r\n                var heightUnit = 90;\r\n                var angleUnit = 0.3;\r\n\r\n\t\t\t\tfor ( var i = 0; i < 24; i ++ ) {\r\n\r\n\t\t\t\t\tvar phi = i * angleUnit + Math.PI/2;\r\n\r\n\t\t\t\t\tvar ball1 = new THREE.Mesh(new THREE.SphereGeometry(size, size, size, 30), new THREE.MeshPhongMaterial( { color: 0xFFFFFF } ));\r\n\t\t\t\t\tball1.position.x = rotUnit * Math.sin( phi );\r\n\t\t\t\t\tball1.position.y = - ( i * heightUnit ) + top;\r\n\t\t\t\t\tball1.position.z = rotUnit * Math.cos( phi );\r\n                    scene.add(ball1);\r\n                    geometry1.vertices.push( ball1.position );\r\n                    \r\n                    var ball2 = new THREE.Mesh(new THREE.SphereGeometry(size, size, size, 30), new THREE.MeshPhongMaterial({ color: 0x0FFFFF }));\r\n    \t\t\t\tball2.position.x = rotUnit * Math.sin( phi - Math.PI);\r\n\t\t\t\t\tball2.position.y = - ( i * heightUnit ) + top;\r\n\t\t\t\t\tball2.position.z = rotUnit * Math.cos( phi - Math.PI);\r\n                    scene.add(ball2);\r\n                    geometry2.vertices.push( ball2.position );\r\n                    \r\n                    var geometry = new THREE.Geometry();\r\n                    geometry.vertices.push( ball1.position );\r\n                    geometry.vertices.push( ball2.position );\r\n                    var line = new THREE.Line( geometry, new THREE.LineBasicMaterial( { color: 0xffffff, opacity: 1 } ) );\r\n        \t\t    scene.add( line );\r\n\r\n                }\r\n                \r\n                var line1 = new THREE.Line( geometry1, new THREE.LineBasicMaterial( { color: 0xffffff, opacity: 1 } ) );\r\n    \t\t\tscene.add( line1 );\r\n                var line2 = new THREE.Line( geometry2, new THREE.LineBasicMaterial( { color: 0xffffff, opacity: 1 } ) );\r\n        \t\tscene.add( line2 );\r\n\t\t\t\t//\r\n                \r\n                // LIGHT\r\n                var light = new THREE.PointLight(0xffffff);\r\n            \tlight.position.set(500,150,1500);\r\n            \tscene.add(light);\r\n                var light = new THREE.PointLight(0xffffff);\r\n                light.position.set(-500,150,-1500);\r\n            \tscene.add(light);\r\n\r\n\t\t\t\trenderer = new THREE.WebGLRenderer({ antialias: true });\r\n\t\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\r\n\t\t\t\trenderer.domElement.style.position = 'absolute';\r\n\t\t\t\tdocument.getElementById( 'container' ).appendChild( renderer.domElement );\r\n\r\n\t\t\t\twindow.addEventListener( 'resize', onWindowResize, false );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction onWindowResize() {\r\n\r\n\t\t\t\tcamera.aspect = window.innerWidth / window.innerHeight;\r\n\t\t\t\tcamera.updateProjectionMatrix();\r\n\r\n\t\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\r\n\r\n\t\t\t}\r\n            var angle=0;\r\n            function animate(){//lastTime, angularSpeed, three){\r\n                // update\r\n                var date = new Date();\r\n                var time = date.getTime();\r\n                \r\n                angle = (angle + 0.001) % (2*Math.PI);\r\n                camera.position.x = 1800 * Math.sin( angle );\r\n\t\t\t\t//camera.position.y = - ( i * heightUnit ) + top;\r\n\t\t\t\tcamera.position.z = 1800 * Math.cos( angle );\r\n                camera.lookAt(scene.children[30].position);\r\n                //var timeDiff = time - lastTime;\r\n                //var angleChange = angularSpeed * timeDiff * 2 * Math.PI / 1000;\r\n                \r\n               // three.cylinder.rotation.x += angleChange;\r\n                //lastTime = time;\r\n         \r\n                // render\r\n                renderer.render(scene, camera);\r\n         \r\n                // request new frame\r\n               /* requestAnimationFrame( function(){\r\n                    animate(lastTime, angularSpeed, three);\r\n                });*/\r\n                /*requestAnimFrame(function(){\r\n                    animate(lastTime, angularSpeed, three);\r\n                });*/\r\n                requestAnimationFrame(animate);\r\n            }\r\n\r\n\t\t</script>\r\n\t</body>\r\n</html>\r\n"]],"start1":0,"start2":0,"length1":0,"length2":5738}]],"length":5738,"saved":false}
{"contributors":[],"silentsave":false,"ts":1353340130998,"patch":[[{"diffs":[[0,"pt src=\""],[1,"site/"],[0,"three.mi"]],"start1":917,"start2":917,"length1":16,"length2":21}]],"length":5743,"saved":false}
{"ts":1353340217374,"patch":[[{"diffs":[[0,"rc=\""],[-1,"site/"],[0,"thre"]],"start1":921,"start2":921,"length1":13,"length2":8}]],"length":5738,"saved":false}
