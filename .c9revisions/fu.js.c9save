{"ts":1351703017683,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":true,"ts":1351703024867,"patch":[[{"diffs":[[1,"var createServer = require(\"http\").createServer;\r\nvar readFile = require(\"fs\").readFile;\r\nvar util = require(\"util\");\r\nvar url = require(\"url\");\r\nvar DEBUG = false;\r\n\r\nvar fu = exports;\r\n\r\nvar NOT_FOUND = \"Not Found\\n\";\r\n\r\nfunction notFound(req, res) {\r\n    res.writeHead(404, {\r\n        \"Content-Type\": \"text/plain\",\r\n        \"Content-Length\": NOT_FOUND.length\r\n    });\r\n    res.end(NOT_FOUND);\r\n}\r\n\r\nvar getMap = {};\r\n\r\nfu.get = function(path, handler) {\r\n    getMap[path] = handler;\r\n};\r\nvar server = createServer(function(req, res) {\r\n    if (req.method === \"GET\" || req.method === \"HEAD\") {\r\n        var handler = getMap[url.parse(req.url).pathname] || notFound;\r\n\r\n        res.simpleText = function(code, body) {\r\n            res.writeHead(code, {\r\n                \"Content-Type\": \"text/plain\",\r\n                \"Content-Length\": body.length\r\n            });\r\n            res.end(body);\r\n        };\r\n\r\n        res.simpleJSON = function(code, obj) {\r\n            var body = new Buffer(JSON.stringify(obj));\r\n            res.writeHead(code, {\r\n                \"Content-Type\": \"text/json\",\r\n                \"Content-Length\": body.length\r\n            });\r\n            res.end(body);\r\n        };\r\n\r\n        handler(req, res);\r\n    }\r\n});\r\n\r\nfu.listen = function(port, host) {\r\n    server.listen(port, host);\r\n};\r\n\r\nfu.close = function() {\r\n    server.close();\r\n};\r\n\r\nfunction extname(path) {\r\n    var index = path.lastIndexOf(\".\");\r\n    return index < 0 ? \"\" : path.substring(index);\r\n}\r\n\r\nfu.staticHandler = function(filename) {\r\n    var body, headers;\r\n    var content_type = fu.mime.lookupExtension(extname(filename));\r\n\r\n    function loadResponseData(callback) {\r\n        if (body && headers && !DEBUG) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        util.puts(\"loading \" + filename + \"...\");\r\n        readFile(filename, function(err, data) {\r\n            if (err) {\r\n                util.puts(\"Error loading \" + filename);\r\n            }\r\n            else {\r\n                body = data;\r\n                headers = {\r\n                    \"Content-Type\": content_type,\r\n                    \"Content-Length\": body.length\r\n                };\r\n                if (!DEBUG) headers[\"Cache-Control\"] = \"public\";\r\n                util.puts(\"static file \" + filename + \" loaded\");\r\n                callback();\r\n            }\r\n        });\r\n    }\r\n\r\n    return function(req, res) {\r\n        loadResponseData(function() {\r\n            res.writeHead(200, headers);\r\n            res.end(req.method === \"HEAD\" ? \"\" : body);\r\n        });\r\n    }\r\n};\r\n\r\nfu.mime = {\r\n    // returns MIME type for extension, or fallback, or octet-steam\r\n    lookupExtension: function(ext, fallback) {\r\n        return fu.mime.TYPES[ext.toLowerCase()] || fallback || 'application/octet-stream';\r\n    },\r\n\r\n    // List of most common mime-types, stolen from Rack.\r\n    TYPES: {\r\n        \".3gp\": \"video/3gpp\",\r\n        \".a\": \"application/octet-stream\",\r\n        \".ai\": \"application/postscript\",\r\n        \".aif\": \"audio/x-aiff\",\r\n        \".aiff\": \"audio/x-aiff\",\r\n        \".asc\": \"application/pgp-signature\",\r\n        \".asf\": \"video/x-ms-asf\",\r\n        \".asm\": \"text/x-asm\",\r\n        \".asx\": \"video/x-ms-asf\",\r\n        \".atom\": \"application/atom+xml\",\r\n        \".au\": \"audio/basic\",\r\n        \".avi\": \"video/x-msvideo\",\r\n        \".bat\": \"application/x-msdownload\",\r\n        \".bin\": \"application/octet-stream\",\r\n        \".bmp\": \"image/bmp\",\r\n        \".bz2\": \"application/x-bzip2\",\r\n        \".c\": \"text/x-c\",\r\n        \".cab\": \"application/vnd.ms-cab-compressed\",\r\n        \".cc\": \"text/x-c\",\r\n        \".chm\": \"application/vnd.ms-htmlhelp\",\r\n        \".class\": \"application/octet-stream\",\r\n        \".com\": \"application/x-msdownload\",\r\n        \".conf\": \"text/plain\",\r\n        \".cpp\": \"text/x-c\",\r\n        \".crt\": \"application/x-x509-ca-cert\",\r\n        \".css\": \"text/css\",\r\n        \".csv\": \"text/csv\",\r\n        \".cxx\": \"text/x-c\",\r\n        \".deb\": \"application/x-debian-package\",\r\n        \".der\": \"application/x-x509-ca-cert\",\r\n        \".diff\": \"text/x-diff\",\r\n        \".djv\": \"image/vnd.djvu\",\r\n        \".djvu\": \"image/vnd.djvu\",\r\n        \".dll\": \"application/x-msdownload\",\r\n        \".dmg\": \"application/octet-stream\",\r\n        \".doc\": \"application/msword\",\r\n        \".dot\": \"application/msword\",\r\n        \".dtd\": \"application/xml-dtd\",\r\n        \".dvi\": \"application/x-dvi\",\r\n        \".ear\": \"application/java-archive\",\r\n        \".eml\": \"message/rfc822\",\r\n        \".eps\": \"application/postscript\",\r\n        \".exe\": \"application/x-msdownload\",\r\n        \".f\": \"text/x-fortran\",\r\n        \".f77\": \"text/x-fortran\",\r\n        \".f90\": \"text/x-fortran\",\r\n        \".flv\": \"video/x-flv\",\r\n        \".for\": \"text/x-fortran\",\r\n        \".gem\": \"application/octet-stream\",\r\n        \".gemspec\": \"text/x-script.ruby\",\r\n        \".gif\": \"image/gif\",\r\n        \".gz\": \"application/x-gzip\",\r\n        \".h\": \"text/x-c\",\r\n        \".hh\": \"text/x-c\",\r\n        \".htm\": \"text/html\",\r\n        \".html\": \"text/html\",\r\n        \".ico\": \"image/vnd.microsoft.icon\",\r\n        \".ics\": \"text/calendar\",\r\n        \".ifb\": \"text/calendar\",\r\n        \".iso\": \"application/octet-stream\",\r\n        \".jar\": \"application/java-archive\",\r\n        \".java\": \"text/x-java-source\",\r\n        \".jnlp\": \"application/x-java-jnlp-file\",\r\n        \".jpeg\": \"image/jpeg\",\r\n        \".jpg\": \"image/jpeg\",\r\n        \".js\": \"application/javascript\",\r\n        \".json\": \"application/json\",\r\n        \".log\": \"text/plain\",\r\n        \".m3u\": \"audio/x-mpegurl\",\r\n        \".m4v\": \"video/mp4\",\r\n        \".man\": \"text/troff\",\r\n        \".mathml\": \"application/mathml+xml\",\r\n        \".mbox\": \"application/mbox\",\r\n        \".mdoc\": \"text/troff\",\r\n        \".me\": \"text/troff\",\r\n        \".mid\": \"audio/midi\",\r\n        \".midi\": \"audio/midi\",\r\n        \".mime\": \"message/rfc822\",\r\n        \".mml\": \"application/mathml+xml\",\r\n        \".mng\": \"video/x-mng\",\r\n        \".mov\": \"video/quicktime\",\r\n        \".mp3\": \"audio/mpeg\",\r\n        \".mp4\": \"video/mp4\",\r\n        \".mp4v\": \"video/mp4\",\r\n        \".mpeg\": \"video/mpeg\",\r\n        \".mpg\": \"video/mpeg\",\r\n        \".ms\": \"text/troff\",\r\n        \".msi\": \"application/x-msdownload\",\r\n        \".odp\": \"application/vnd.oasis.opendocument.presentation\",\r\n        \".ods\": \"application/vnd.oasis.opendocument.spreadsheet\",\r\n        \".odt\": \"application/vnd.oasis.opendocument.text\",\r\n        \".ogg\": \"application/ogg\",\r\n        \".p\": \"text/x-pascal\",\r\n        \".pas\": \"text/x-pascal\",\r\n        \".pbm\": \"image/x-portable-bitmap\",\r\n        \".pdf\": \"application/pdf\",\r\n        \".pem\": \"application/x-x509-ca-cert\",\r\n        \".pgm\": \"image/x-portable-graymap\",\r\n        \".pgp\": \"application/pgp-encrypted\",\r\n        \".pkg\": \"application/octet-stream\",\r\n        \".pl\": \"text/x-script.perl\",\r\n        \".pm\": \"text/x-script.perl-module\",\r\n        \".png\": \"image/png\",\r\n        \".pnm\": \"image/x-portable-anymap\",\r\n        \".ppm\": \"image/x-portable-pixmap\",\r\n        \".pps\": \"application/vnd.ms-powerpoint\",\r\n        \".ppt\": \"application/vnd.ms-powerpoint\",\r\n        \".ps\": \"application/postscript\",\r\n        \".psd\": \"image/vnd.adobe.photoshop\",\r\n        \".py\": \"text/x-script.python\",\r\n        \".qt\": \"video/quicktime\",\r\n        \".ra\": \"audio/x-pn-realaudio\",\r\n        \".rake\": \"text/x-script.ruby\",\r\n        \".ram\": \"audio/x-pn-realaudio\",\r\n        \".rar\": \"application/x-rar-compressed\",\r\n        \".rb\": \"text/x-script.ruby\",\r\n        \".rdf\": \"application/rdf+xml\",\r\n        \".roff\": \"text/troff\",\r\n        \".rpm\": \"application/x-redhat-package-manager\",\r\n        \".rss\": \"application/rss+xml\",\r\n        \".rtf\": \"application/rtf\",\r\n        \".ru\": \"text/x-script.ruby\",\r\n        \".s\": \"text/x-asm\",\r\n        \".sgm\": \"text/sgml\",\r\n        \".sgml\": \"text/sgml\",\r\n        \".sh\": \"application/x-sh\",\r\n        \".sig\": \"application/pgp-signature\",\r\n        \".snd\": \"audio/basic\",\r\n        \".so\": \"application/octet-stream\",\r\n        \".svg\": \"image/svg+xml\",\r\n        \".svgz\": \"image/svg+xml\",\r\n        \".swf\": \"application/x-shockwave-flash\",\r\n        \".t\": \"text/troff\",\r\n        \".tar\": \"application/x-tar\",\r\n        \".tbz\": \"application/x-bzip-compressed-tar\",\r\n        \".tcl\": \"application/x-tcl\",\r\n        \".tex\": \"application/x-tex\",\r\n        \".texi\": \"application/x-texinfo\",\r\n        \".texinfo\": \"application/x-texinfo\",\r\n        \".text\": \"text/plain\",\r\n        \".tif\": \"image/tiff\",\r\n        \".tiff\": \"image/tiff\",\r\n        \".torrent\": \"application/x-bittorrent\",\r\n        \".tr\": \"text/troff\",\r\n        \".txt\": \"text/plain\",\r\n        \".vcf\": \"text/x-vcard\",\r\n        \".vcs\": \"text/x-vcalendar\",\r\n        \".vrml\": \"model/vrml\",\r\n        \".war\": \"application/java-archive\",\r\n        \".wav\": \"audio/x-wav\",\r\n        \".wma\": \"audio/x-ms-wma\",\r\n        \".wmv\": \"video/x-ms-wmv\",\r\n        \".wmx\": \"video/x-ms-wmx\",\r\n        \".wrl\": \"model/vrml\",\r\n        \".wsdl\": \"application/wsdl+xml\",\r\n        \".xbm\": \"image/x-xbitmap\",\r\n        \".xhtml\": \"application/xhtml+xml\",\r\n        \".xls\": \"application/vnd.ms-excel\",\r\n        \".xml\": \"application/xml\",\r\n        \".xpm\": \"image/x-xpixmap\",\r\n        \".xsl\": \"application/xml\",\r\n        \".xslt\": \"application/xslt+xml\",\r\n        \".yaml\": \"text/yaml\",\r\n        \".yml\": \"text/yaml\",\r\n        \".zip\": \"application/zip\"\r\n    }\r\n};\r\n"]],"start1":0,"start2":0,"length1":0,"length2":9189}]],"length":9189,"saved":false}
